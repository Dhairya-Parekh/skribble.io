{"ast":null,"code":"import _toConsumableArray from\"/home/dhairya/Desktop/Scribble/chatfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/dhairya/Desktop/Scribble/chatfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./chat.scss\";import{to_Decrypt,to_Encrypt}from\"../aes.js\";import{process}from\"../store/action/index\";import React,{useState,useEffect,useRef}from\"react\";import{useDispatch}from\"react-redux\";//gets the data from the action object and reducers defined earlier\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Chat(_ref){var username=_ref.username,roomname=_ref.roomname,socket=_ref.socket;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var dispatch=useDispatch();var dispatchProcess=function dispatchProcess(encrypt,msg,cipher){dispatch(process(encrypt,msg,cipher));};useEffect(function(){socket.on(\"message\",function(data){//decypt the message\nvar ans=to_Decrypt(data.text,data.username);dispatchProcess(false,ans,data.text);console.log(ans);var temp=messages;temp.push({userId:data.userId,username:data.username,text:ans});setMessages(_toConsumableArray(temp));});},[socket]);var sendData=function sendData(){if(text!==\"\"){//encrypt the message here\nvar ans=to_Encrypt(text);socket.emit(\"chat\",ans);setText(\"\");}};var messagesEndRef=useRef(null);var scrollToBottom=function scrollToBottom(){messagesEndRef.current.scrollIntoView({behavior:\"smooth\"});};useEffect(scrollToBottom,[messages]);console.log(messages,\"mess\");return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-name\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[username,\" \",/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:\"0.7rem\"},children:[\"in \",roomname]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-message\",children:[messages.map(function(i){if(i.username===username){return/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsx(\"p\",{children:i.text}),/*#__PURE__*/_jsx(\"span\",{children:i.username})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"message mess-right\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[i.text,\" \"]}),/*#__PURE__*/_jsx(\"span\",{children:i.username})]});}}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"send\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"enter your message\",value:text,onChange:function onChange(e){return setText(e.target.value);},onKeyPress:function onKeyPress(e){if(e.key===\"Enter\"){sendData();}}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendData,children:\"Send\"})]})]});}export default Chat;","map":{"version":3,"sources":["/home/dhairya/Desktop/Scribble/chatfrontend/src/chat/chat.js"],"names":["to_Decrypt","to_Encrypt","process","React","useState","useEffect","useRef","useDispatch","Chat","username","roomname","socket","text","setText","messages","setMessages","dispatch","dispatchProcess","encrypt","msg","cipher","on","data","ans","console","log","temp","push","userId","sendData","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","fontSize","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import \"./chat.scss\";\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n//gets the data from the action object and reducers defined earlier\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const dispatch = useDispatch();\n  \n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      //decypt the message\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return (\n    <div className=\"chat\">\n      <div className=\"user-name\">\n        <h2>\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === username) {\n            return (\n              <div className=\"message\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"enter your message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}